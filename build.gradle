buildscript {
	// QueryDSL
	ext {
		queryDslVersion = "5.0.0"
	}
	repositories {
		mavenLocal()
		maven { url 'https://maven.aliyun.com/repository/google/' }
		maven { url 'https://maven.aliyun.com/repository/public/' }
		maven { url 'https://maven.aliyun.com/repository/spring/' }
		maven { url 'https://maven.aliyun.com/repository/gradle-plugin/' }
		maven { url 'https://maven.aliyun.com/repository/spring-plugin/' }

		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:2.7.14.RELEASE")
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.14'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	// queryDSL
	id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
}

group = 'jpabook '
version = '0.0.1-SNAPSHOT'
sourceCompatibility = "17"

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-jdbc', version: '2.6.5'
	runtimeOnly 'com.mysql:mysql-connector-j'

	// Swagger3 gradle
	implementation 'io.springfox:springfox-boot-starter:3.0.0'
	implementation("io.swagger:swagger-annotations:1.5.21")
	implementation("io.swagger:swagger-models:1.5.21")

	// JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// spring security
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// QueryDSL
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
	implementation "com.querydsl:querydsl-apt:${queryDslVersion}"
	implementation "com.querydsl:querydsl-core:${queryDslVersion}"
}

tasks.named('test') {
	useJUnitPlatform()
}

//querydsl 추가
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}
sourceSets {
	main.java.srcDir querydslDir
}
compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}
configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}
targetCompatibility = JavaVersion.VERSION_17
